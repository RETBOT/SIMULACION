/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Practica16;

import java.text.DecimalFormat;
import java.util.Random;
import javax.swing.table.DefaultTableModel;

/**
 *
 * 
 */
public class Practica16 extends javax.swing.JFrame {

    /**
     * Creates new form Practica16
     */
    
    DefaultTableModel proba; 
    DefaultTableModel entrega; 
    DefaultTableModel factor; 
    DefaultTableModel simulacion; 
    DefaultTableModel resultado; 
    DefaultTableModel resultadoPorA単o; 
    double [] resu = new double[5];
    public Practica16() {
        initComponents();
        tabProb();
        tabTiemEntrega();
        tabFactor(); 
          
        simulacion = (DefaultTableModel)jTabSimulacion.getModel();
        resultado = (DefaultTableModel)jTabResultados.getModel();
        resultadoPorA単o = (DefaultTableModel)jTabResultadosPorA単o.getModel();
        simulacion.setRowCount(12);
        
    }
    
    public void tabProb(){
        proba = (DefaultTableModel)jTabProba.getModel();
        proba.setRowCount(26);
        int val = 35;
        double [] mat = {0.01,0.015,0.02,0.02,0.022,0.023,0.025,0.027,0.028,0.029,0.035,0.045,0.06,0.065,0.07,0.08,0.075,0.07,0.065
                        ,0.06,0.05,0.04,0.03,0.016,0.015,0.005};
        double [] acum1 = {0.001,0.011,0.026,0.046,0.066,0.088,0.12,0.136,0.163,0.2,0.22,0.255,0.3,0.36,0.425,0.495,0.575,0.65,0.72
                        ,0.785,0.845,0.895,0.935,0.965,0.99,0.996};
        double [] acum2 = {0.01,0.025,0.045,0.065,0.087,0.11,0.135,0.162,0.19,0.219,0.254,0.299,0.359,0.424,0.494,0.574,0.649,0.719
                           ,0.784,0.844,0.894,0.934,0.964,0.98,0.995,1};
        
        for(int i=0;i<proba.getRowCount();i++){
            proba.setValueAt(val, i, 0);
            val++;
            proba.setValueAt(mat[i], i, 1);
            proba.setValueAt(acum1[i], i, 2);
            proba.setValueAt(acum2[i], i, 3);
        }
    } 
    public void tabTiemEntrega(){
        entrega = (DefaultTableModel)jTabTiemEntrega.getModel();
        entrega.setRowCount(3);
        double [] mat = {0.3,0.4,0.5};
        for(int i=0;i<entrega.getRowCount();i++){
            entrega.setValueAt(i+1, i, 0);
            entrega.setValueAt(mat[i], i, 1);
        }
    }
    
    public void tabFactor(){
        factor = (DefaultTableModel)jTabFactor.getModel();
        factor.setRowCount(12);
        double [] fac = {1.2,1,0.9,0.8,0.8,0.7,0.8,0.9,1,1.2,1.3,1.4};
        for(int i=0;i<factor.getRowCount();i++){
            factor.setValueAt(i+1, i, 0);
            factor.setValueAt(fac[i], i, 1);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabProba = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextQ = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextR = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabTiemEntrega = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabFactor = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabSimulacion = new javax.swing.JTable();
        jButSimular = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTabResultados = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabQR = new javax.swing.JLabel();
        jSpinSimulaciones = new javax.swing.JSpinner();
        jLab = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTabResultadosPorA単o = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Practica 16");

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Probabilidad", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 0, 0))); // NOI18N

        jTabProba.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cantidad", "Probabilidad", "Probabilidad Acumulda", "Probabilidad Acumulada"
            }
        ));
        jScrollPane1.setViewportView(jTabProba);

        jLabel1.setText("Valor de Q = ");

        jTextQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextQActionPerformed(evt);
            }
        });

        jLabel2.setText("Valor de R = ");

        jTextR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextRActionPerformed(evt);
            }
        });

        jLabel3.setText("Tiempo de entrega");

        jTabTiemEntrega.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Meses", "Probabilidad"
            }
        ));
        jScrollPane2.setViewportView(jTabTiemEntrega);

        jLabel4.setText("Factores estacionales");

        jTabFactor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mes", "Factor estacional"
            }
        ));
        jScrollPane3.setViewportView(jTabFactor);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextQ, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addGap(3, 3, 3)
                                .addComponent(jTextR, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Simulacion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel2.setToolTipText("");

        jTabSimulacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Cantidad de pedido", "Mes", "Inv. Inicial", "Numero aleatorio", "Demanda simulada", "Demanda ajustada", "Inv. Final", "Faltante", "Orden ", "Num. Aleatorio", "Tiempo entrega", "Inventario Promedio"
            }
        ));
        jScrollPane4.setViewportView(jTabSimulacion);

        jButSimular.setText("Simular");
        jButSimular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButSimularActionPerformed(evt);
            }
        });

        jTabResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Q", "R", "Costo de ordenar", "Costo de almacenar", "Costo faltante", "Costo total"
            }
        ));
        jScrollPane5.setViewportView(jTabResultados);

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Q y R optimos");

        jLabQR.setBackground(new java.awt.Color(255, 0, 0));
        jLabQR.setForeground(new java.awt.Color(0, 0, 0));
        jLabQR.setOpaque(true);

        jSpinSimulaciones.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinSimulacionesStateChanged(evt);
            }
        });

        jLab.setBackground(new java.awt.Color(0, 0, 0));
        jLab.setForeground(new java.awt.Color(0, 0, 0));
        jLab.setText("A単os a simular");

        jTabResultadosPorA単o.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "A単o", "Inv prom mes", "Num de pedidos", "Cant unidades faltantes"
            }
        ));
        jScrollPane7.setViewportView(jTabResultadosPorA単o);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLab, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jSpinSimulaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jButSimular)
                .addGap(44, 44, 44))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabQR, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 963, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButSimular)
                    .addComponent(jSpinSimulaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLab))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabQR, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextRActionPerformed

    private void jButSimularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButSimularActionPerformed
       int a単o=1;

       resultado.setRowCount(0);
       resultadoPorA単o.setRowCount(0);
       int simula;
       int cantSimula = (int)jSpinSimulaciones.getValue();
       //numeros aleatorios 
       Random azar = new Random();
       //para los numeros aleatorios de 3 cifras 
       DecimalFormat df = new DecimalFormat("###,##0.000");
       

       for(simula =0; simula<cantSimula;simula++){
       //variables 
       int Q = 0,R=0;
       double numADS = 0, val1TabProba = 0, val2TabProba = 0, demSimu = 0, demFactor = 0, multiSF = 0;
       int ini = 0, dem = 0, resta = 0;
       double tiemEntre =0, proba1 = 0,proba3 =0,invePromTotal=0, costoTotal = 0;
       int resta2=0, Q2=0, invIni = 0,invFin = 0, demanda = 0,orden = 0,faltante = 0;

           Q = azar.nextInt(150)+100;
           R = azar.nextInt(50)+50;
           
           jTextQ.setText(Q+"");
           jTextR.setText(R+"");
           simulacion.setRowCount(0);
           

         simulacion.setRowCount(12);
        //meses y num aleatorio 
        for(int i = 0;i<simulacion.getRowCount();i++){
            simulacion.setValueAt(i+1, i, 1);
            simulacion.setValueAt(df.format(azar.nextDouble()), i, 3);
        }
        //invenario inicial
        simulacion.setValueAt(150, 0, 2);
        
      //demanda simulada   
        for(int i = 0;i<simulacion.getRowCount();i++){
            numADS = Double.parseDouble(simulacion.getValueAt(i, 3)+"");
            for(int j = 0;j<proba.getRowCount();j++){
                val1TabProba = Double.parseDouble(proba.getValueAt(j, 2)+"");
                val2TabProba = Double.parseDouble(proba.getValueAt(j, 3)+"");
                if((numADS>=val1TabProba)||(numADS<=val2TabProba)){
                simulacion.setValueAt(proba.getValueAt(j, 0), i, 4);
                }
            }   
        }
        //demanda ajustada 
        for(int i = 0;i<simulacion.getRowCount();i++){
            try{
            demSimu = Double.parseDouble(simulacion.getValueAt(i, 4)+"");  
            demFactor = Double.parseDouble(factor.getValueAt(i, 1)+"");  
            multiSF = demSimu*demFactor;
            simulacion.setValueAt((int)multiSF , i, 5);
            }catch(NumberFormatException ex){
            
            }
        }
            
         //orden
         simulacion.setValueAt(1, 0, 8);

            ini = Integer.parseInt(simulacion.getValueAt(0, 2)+"");
            dem = Integer.parseInt(simulacion.getValueAt(0, 5)+"");
            resta = ini-dem;
            simulacion.setValueAt(resta,0, 6);
            simulacion.setValueAt(resta, 1, 2);
            simulacion.setValueAt(0, 0, 7);
         //num aleatorio 
         simulacion.setValueAt(df.format(azar.nextDouble()), 0, 9);
         //tiempo de entrega 
         
         tiemEntre = Double.parseDouble(simulacion.getValueAt(0,9)+"");
         proba1 = Double.parseDouble(entrega.getValueAt(0,1)+"");
         proba3 = Double.parseDouble(entrega.getValueAt(2,1)+"");
         
         if(tiemEntre<proba1)
             simulacion.setValueAt(entrega.getValueAt(0, 0), 0,10);
         else if(tiemEntre>proba3)
             simulacion.setValueAt(entrega.getValueAt(2, 0), 0,10);
         else 
             simulacion.setValueAt(entrega.getValueAt(1, 0), 0,10);
        //inventario final
        try{try{
        for(int i = 1;i<simulacion.getRowCount()+1;i++){

            ini = Integer.parseInt(simulacion.getValueAt(i-1, 2)+"");
            dem = Integer.parseInt(simulacion.getValueAt(i-1, 5)+"");
            resta = ini-dem;
            
            if(resta>0){
            simulacion.setValueAt(resta, i-1, 6);
            simulacion.setValueAt(resta, i, 2);
            simulacion.setValueAt(0, i, 7);
            //orden
            simulacion.setValueAt(0, i, 8);
            }else if(resta<=0){
            resta2 = dem-ini;
            simulacion.setValueAt(0, i-1, 6);
            simulacion.setValueAt(resta2, i, 7);
            Q2 = Integer.parseInt(jTextQ.getText());
            simulacion.setValueAt(Q2, i, 0);
            simulacion.setValueAt(resta+Q2, i, 2);
            
            //orden
            simulacion.setValueAt(1, i, 8);
            
            //num aleatorio 
             simulacion.setValueAt(df.format(azar.nextDouble()), i, 9);
             
             //tiempo de entrega 
             tiemEntre = Double.parseDouble(simulacion.getValueAt(i,9)+"");
             proba1 = Double.parseDouble(entrega.getValueAt(0,1)+"");
             proba3 = Double.parseDouble(entrega.getValueAt(2,1)+"");
             
             if(tiemEntre<proba1)
             simulacion.setValueAt(entrega.getValueAt(0, 0), i,10);
             else if(tiemEntre>proba3)
             simulacion.setValueAt(entrega.getValueAt(2, 0), i,10);
             else 
             simulacion.setValueAt(entrega.getValueAt(1, 0), i,10);
            }
        }
        }catch(NumberFormatException ex){}}catch(ArrayIndexOutOfBoundsException e1){}

         
         //inventario
        for(int i=0;i<simulacion.getRowCount();i++){
            invIni = Integer.parseInt(simulacion.getValueAt(i, 2)+"");
            invFin = Integer.parseInt(simulacion.getValueAt(i, 6)+"");
            demanda = Integer.parseInt(simulacion.getValueAt(i, 5)+"");
            double promInve = 0;
            if(invIni>0&&invFin>0){
                promInve = (invIni+invFin)/2;
                simulacion.setValueAt(promInve, i, 11);
            }else {
              promInve = Math.pow(invIni, 2)/(2*demanda);
              simulacion.setValueAt(promInve, i, 11);
            }
            
        }
        //orden
        for(int i =0; i<simulacion.getRowCount();i++){
            orden += Integer.parseInt(simulacion.getValueAt(i, 8)+"");
            invePromTotal += Double.parseDouble(simulacion.getValueAt(i, 11)+"");
            faltante += Integer.parseInt(simulacion.getValueAt(i, 7)+"");
        }
        //inventarioPromeio por a単o
        invePromTotal/=12;

        resultadoPorA単o.addRow(new Object[]{a単o,df.format(invePromTotal),orden,faltante});
        a単o++;
        
        //costo de ordenar
        orden*=100;
        invePromTotal*=20;
        faltante*=50;
        costoTotal = orden+invePromTotal+faltante;
       
        resultado.addRow(new Object[]{Q,R,orden,df.format(invePromTotal),faltante,costoTotal});
       }
       
       // Q y R 
       double costoMenor = Double.parseDouble(resultado.getValueAt(0,5)+"");
       int Qmin = 0;
       int Rmin = 0;
       for(int i=0;i<resultado.getRowCount();i++){
           double costoTotal = Double.parseDouble(resultado.getValueAt(i,5)+"");
           if(costoTotal<costoMenor){
               costoMenor = costoTotal;
               Qmin = Integer.parseInt(resultado.getValueAt(i,0)+"");
               Rmin = Integer.parseInt(resultado.getValueAt(i,1)+"");
           }
       }
       jLabQR.setText("Q = "+Qmin+", R = "+Rmin);
      
    }//GEN-LAST:event_jButSimularActionPerformed

    private void jSpinSimulacionesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinSimulacionesStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinSimulacionesStateChanged

    private void jTextQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextQActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextQActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica16.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica16.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica16.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica16.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica16().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButSimular;
    private javax.swing.JLabel jLab;
    private javax.swing.JLabel jLabQR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSpinner jSpinSimulaciones;
    private javax.swing.JTable jTabFactor;
    private javax.swing.JTable jTabProba;
    private javax.swing.JTable jTabResultados;
    private javax.swing.JTable jTabResultadosPorA単o;
    private javax.swing.JTable jTabSimulacion;
    private javax.swing.JTable jTabTiemEntrega;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextQ;
    private javax.swing.JTextField jTextR;
    // End of variables declaration//GEN-END:variables
}
